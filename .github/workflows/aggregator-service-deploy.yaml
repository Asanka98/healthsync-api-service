name: Deploy Aggregator Service

on:
  push:
    branches:
      - main
    paths:
      - 'aggregator-service/**'


jobs:
  build-and-deploy:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest

    env:
      EKS_CLUSTER_NAME: healthsync-prod
      REGION: ap-southeast-1
      IMAGE_REPO_NAME: healthsync/aggregator-service
      IMAGE_TAG: latest
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ${{ env.REGION }}
          role-session-name: github-actions-session

      # Step 3: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Create ECR Repository if not exists
        run: |
          REPO_NAME=${{ env.IMAGE_REPO_NAME }}
          # Check if the repository exists
          aws ecr describe-repositories --repository-names $REPO_NAME || \
          # If it doesn't exist, create it
          aws ecr create-repository --repository-name $REPO_NAME

      # Step 4: Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.REGION }}.amazonaws.com/${{ env.IMAGE_REPO_NAME }}:${{ env.IMAGE_TAG }} .
          docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.REGION }}.amazonaws.com/${{ env.IMAGE_REPO_NAME }}:${{ env.IMAGE_TAG }}

      # Step 5: Update Kubernetes deployment
      - name: Set up kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ env.REGION }} --name ${{ env.EKS_CLUSTER_NAME }}

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f aggregator-cronjob.yaml
          kubectl apply -f aggregator-service.yaml
