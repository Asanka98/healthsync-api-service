name: Deploy Aggregator Service

on:
  push:
    branches:
      - main
    # paths:
    #   - 'aggregator-service/**'
    #   - 'aggregator-service/app/**


jobs:
  build-and-deploy:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest

    env:
      EKS_CLUSTER_NAME: healthsync-prod
      REGION: ap-southeast-1
      IMAGE_REPO_NAME: healthsync/aggregator-service
      IMAGE_TAG: latest
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      # Step 3: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Create ECR Repository if not exists
        run: |
          REPO_NAME=${{ env.IMAGE_REPO_NAME }}
          # Check if the repository exists
          aws ecr describe-repositories --repository-names $REPO_NAME || \
          # If it doesn't exist, create it
          aws ecr create-repository --repository-name $REPO_NAME

      # Step 4: Build and push Docker image
      - name: Build and push Docker image
        run: |
          aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-1.amazonaws.com
          docker build -t aggregator-service ./aggregator-service
          docker tag aggregator-service:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/healthsync/aggregator-service:latest
          docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.REGION }}.amazonaws.com/${{ env.IMAGE_REPO_NAME }}:${{ env.IMAGE_TAG }}

      # Step 5: Update Kubernetes deployment
      - name: Configure kubectl
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up kubectl
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name healthsync-prod

      - name: Deploy to EKS
        run: |
          kubectl create namespace healthsync || echo "Namespace 'healthsync' already exists"
          kubectl config set-context --current --namespace=healthsync
          kubectl apply -f aggregator-service/deployment.yaml
          kubectl apply -f aggregator-service/service.yaml
          kubectl apply -f aggregator-service/aggregator-service.yamls
          kubectl get svc -n healthsync
